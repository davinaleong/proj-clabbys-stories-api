// ==============================
// ✅ DATABASE CONFIG
// ==============================
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ==============================
// ✅ ENUMS
// ==============================
enum GalleryStatus {
  DRAFT
  PUBLISHED
}

enum LightboxMode {
  BLACK
  BLURRED
}

enum DateFormat {
  EEE_DD_MMM_YYYY      // Sun, 20 Jul 2025
  EEEE_DD_MMM_YYYY     // Sunday, 20 Jul 2025
  EEEE_DD_MMMM_YYYY    // Sunday, 20 July 2025
  DD_MMM_YYYY          // 20 Jul 2025
  DD_MMMM_YYYY         // 20 July 2025
  DD_MMM               // 20 Jul
  DD_MMMM              // 20 July
}

enum SortOrder {
  ALPHABETICAL_ASC   // Alphabetical Order (A → Z)
  ALPHABETICAL_DESC  // Reverse Alphabetical (Z → A)
  NEWEST             // Newest First
  OLDEST             // Oldest First
}

enum UserRole {
  ADMIN
  EDITOR
  VIEWER
}

// ==============================
// ✅ MODELS
// ==============================
model User {
  id             String     @id @default(uuid())
  name           String
  email          String     @unique
  passwordHash   String     // store bcrypt or argon2 hash
  role           UserRole   @default(VIEWER)
  galleries      Gallery[]  // Optional: link galleries owned by this user

  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Gallery {
  id             String         @id @default(uuid())
  title          String
  description    String?
  date           DateTime?
  passphraseHash String?        // Optional password for guest access
  status         GalleryStatus  @default(DRAFT)

  // Owner of the gallery
  userId         String?
  user           User?          @relation(fields: [userId], references: [id])

  photos         Photo[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Photo {
  id          String    @id @default(uuid())
  title       String?
  description String?
  date        DateTime?
  imageUrl    String
  takenAt     DateTime?
  position    Int        @default(0)

  galleryId   String
  gallery     Gallery   @relation(fields: [galleryId], references: [id])

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// ==============================
// ✅ APP SETTINGS MODEL
// ==============================
model AppSetting {
  id                String       @id @default(uuid())
  applicationName   String       // App Name, e.g. "Clabby's Stories"
  lightboxMode      LightboxMode @default(BLACK)
  defaultDateFormat DateFormat   @default(EEE_DD_MMM_YYYY)
  defaultSortOrder  SortOrder    @default(NEWEST)

  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}
